AC_INIT(src/Global.cs)

AM_CONFIG_HEADER(config.h)
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(muine, 0.8.11)

AM_MAINTAINER_MODE

# Note: for 'make dist' you need at least intltool 0.4.0, see #537352.
IT_PROG_INTLTOOL([0.37.1])

AC_PROG_CC
AC_ISC_POSIX
AC_HEADER_STDC
AM_PROG_LIBTOOL

GNOME_DEBUG_CHECK
GNOME_COMPILE_WARNINGS(error)
AM_PATH_GLIB_2_0

dnl Version dependencies

GSTREAMER_REQUIRED=0.10.0
GLIB_REQUIRED=2.14
GTK_REQUIRED=2.8
ICON_THEME_REQUIRED=2.10
MONO_REQUIRED=1.1
GTKSHARP_REQUIRED=2.12.9
TAGLIBSHARP_REQUIRED=2.0.3
MONODOC_REQUIRED=1.1.9

dnl Pkgconfig
PKG_PROG_PKG_CONFIG
PKG_CHECK_MODULES(MUINE,
		  gconf-2.0 \
		  gdk-pixbuf-2.0 \
		  glib-2.0 >= $GLIB_REQUIRED \
		  gtk+-2.0 >= $GTK_REQUIRED \
		  gnome-icon-theme >= $ICON_THEME_REQUIRED \
		  gstreamer-0.10 >= $GSTREAMER_REQUIRED)
AC_SUBST(MUINE_CFLAGS)
AC_SUBST(MUINE_LIBS)

PKG_CHECK_MODULES(MONO,
		  mono >= $MONO_REQUIRED)

PKG_CHECK_MODULES(GTKSHARP,
		  gtk-sharp-2.0 >= $GTKSHARP_REQUIRED \
		  gnome-sharp-2.0 >= $GTKSHARP_REQUIRED \
		  glade-sharp-2.0 >= $GTKSHARP_REQUIRED \
		  gconf-sharp-2.0 >= $GTKSHARP_REQUIRED \
		  gnome-vfs-sharp-2.0 >= $GTKSHARP_REQUIRED)

PKG_CHECK_MODULES(TAGLIBSHARP,
                 taglib-sharp >= $TAGLIBSHARP_REQUIRED)

dnl ndesk-dbus
PKG_CHECK_MODULES(DBUS, ndesk-dbus-1.0 >= 0.4 \
	ndesk-dbus-glib-1.0 >= 0.3, have_dbus="yes", have_dbus="no")
if test "x$have_dbus" != "xyes"; then
	AC_MSG_ERROR([You need NDESK-DBUS)])
fi
AM_CONDITIONAL(EXTERNAL_DBUS, test "x$have_dbus" = "xyes")

dnl inotify

AC_ARG_ENABLE([inotify],
         AC_HELP_STRING([--disable-inotify], [Disable inotify filesystem monitoring support (default auto)]),
         enable_inotify=$enableval,
         enable_inotify=auto)

AC_CHECK_HEADERS(sys/inotify.h)

if test "x$ac_cv_header_sys_inotify_h" = "xno"; then
	dnl error out if user has explicitly requested inotify
	if test "x$enable_inotify" = "xyes"; then
		AC_MSG_ERROR([inotify is unavailable on your system architecture])
	fi
	
	enable_inotify="no (unavailable)"
else                                                                                                                                    
	if test "x$enable_inotify" != "xno"; then
		enable_inotify="yes"
	else
		enable_inotify="no (disabled)"
	fi
fi

AM_CONDITIONAL(ENABLE_INOTIFY, test "x$enable_inotify" = "xyes")

dnl Handle GConf
AC_PATH_PROG(GCONFTOOL, gconftool-2, no)
AM_GCONF_SOURCE_2

dnl Check for GDBM
AC_CHECK_HEADER(gdbm.h,,AC_MSG_ERROR(you need gdbm))
GDBM_LIBS="-lgdbm"
AC_SUBST(GDBM_LIBS)

dnl Check for Mono
AC_PATH_PROG(MCS, gmcs)
if test x$MCS = x; then
        AC_MSG_ERROR(You need gmcs)
fi
AC_PATH_PROG(MONO, mono)
if test x$MONO = x; then
        AC_MSG_ERROR(You need mono)
fi

MCS_FLAGS="-codepage:utf8"
MONO_FLAGS=
if test $USE_MAINTAINER_MODE = yes; then
	MCS_FLAGS="$MCS_FLAGS -debug"
	MONO_FLAGS="$MONO_FLAGS --debug"
fi
AC_SUBST(MCS_FLAGS)
AC_SUBST(MONO_FLAGS)

dnl GAC
AC_PATH_PROG(GACUTIL, gacutil)
if test x$GACUTIL = x; then
	AC_MSG_ERROR(You need gacutil)
fi

GACUTIL_FLAGS='/package muine /gacdir $(libdir) /root $(DESTDIR)$(libdir)'
AC_SUBST(GACUTIL_FLAGS)

dnl Monodoc
PKG_CHECK_MODULES(MONODOC, monodoc >= $MONODOC_REQUIRED, have_monodoc=yes, have_monodoc=no)
AM_CONDITIONAL(ENABLE_MONODOC, test "x$have_monodoc" = "xyes")

AC_PATH_PROG(MDASSEMBLER, mdassembler)
AC_PATH_PROG(MONODOCER, monodocer)

dnl Intl
GETTEXT_PACKAGE=muine
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE", [Gettext package])
AM_GLIB_GNU_GETTEXT

AC_OUTPUT([
Makefile
muine.spec
data/Makefile
data/muine-dbus.pc
data/muine-plugin.pc
data/org.gnome.Muine.service
data/glade/Makefile
data/images/Makefile
data/ui/Makefile
libmuine/Makefile
PluginLib/Makefile
DBusLib/Makefile
src/Makefile
plugins/Makefile
doc/Makefile
po/Makefile.in
])
